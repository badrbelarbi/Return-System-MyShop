### Good Weather Tests:


### Get list of RMA
GET http://localhost:3000/rma
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get list of RMA successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(Array.isArray(response.body), "Expected body to be an array");
    });
%}


### Get count of RMA
GET http://localhost:3000/rma/count
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get count of RMA successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(typeof response.body === 'number', "Expected body to be a number");
    });
%}



### Get RMAs with date
GET http://localhost:3000/rma/withDates
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get RMAs with date successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(Array.isArray(response.body), "Expected body to be an array");
    });
%}



### Get RMAs per month
GET http://localhost:3000/rma/monthly
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get RMAs per month successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(Array.isArray(response.body), "Expected body to be an array");
    });
%}



### Get list of return products
GET http://localhost:3000/rma/returns/Products
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get list of return products successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(Array.isArray(response.body), "Expected body to be an array");
    });
%}



### Get RMA by ID
GET http://localhost:3000/rma/1
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get RMA by ID successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(typeof response.body === 'object', "Expected body to be an object");
        client.assert(response.body.rmaId === 1, "Expected rmaId to be 1");
    });
%}


### Get RMA by barcode
GET http://localhost:3000/rma/barcode
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get RMA by barcode successfully", function () {
        client.assert(response.status === 200, "Expected RMA information");
        client.assert(Array.isArray(response.body), "Expected body to be an array");
    });
%}



### Get total price of an RMA
GET http://localhost:3000/rma/2/total-price
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get total price of an RMA successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(typeof response.body === 'number', "Expected body to be a number");
    });
%}



### Get status of an RMA
GET http://localhost:3000/rma/3/status
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get status of an RMA successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(typeof response.body === 'string', "Expected body to be a string");
    });
%}



### Get customer of an RMA
GET http://localhost:3000/rma/5/customer
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get customer of an RMA successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(typeof response.body === 'object', "Expected body to be an object");
    });
%}



### Get products of an RMA
GET http://localhost:3000/rma/8/products
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get products of an RMA successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(Array.isArray(response.body), "Expected body to be an array");
    });
%}



### Get quantity of an RMA
GET http://localhost:3000/rma/14/quantity
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get quantity of an RMA successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(typeof response.body === 'number', "Expected body to be a number");
    });
%}



### Get returns by user ID
GET http://localhost:3000/rma/returns/1
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get returns by user ID successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(Array.isArray(response.body), "Expected body to be an array");
    });
%}



### Delete an RMA(*)
DELETE http://localhost:3000/rma/1
Content-Type: application/json
Accept: application/json

> {%
    client.test("Delete an RMA successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
    });
%}



### Update an RMA(*)
PATCH http://localhost:3000/rma/1
Content-Type: application/json
Accept: application/json

{


}


### Update returned product quantity(*)
POST http://localhost:3000/rma/update-returned-product-quantity
Content-Type: application/json
Accept: application/json

{

}


### Assign RMA to controller(*)
POST http://localhost:3000/rma/assign/2
Content-Type: application/json
Accept: application/json

{


}



### Bad Weather Tests:

### Get list of RMA - Failure
GET http://localhost:3000/rmas
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get list of RMA failure", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}


### Get count of RMA - Failure
GET http://localhost:3000/rmas/count
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get count of RMA failure", function() {
        client.assert(response.status === 500, "Expected response status to be 500");
    });
%}

### Get RMAs with date - Failure
GET http://localhost:3000/rma/withDates
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get RMAs with date failure", function() {
        client.assert(response.status === 500, "Expected response status to be 500");
    });
%}

### Get RMAs per month
GET http://localhost:3000/rma/monthly
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get RMAs per month failure", function() {
        client.assert(response.status === 500, "Expected response status to be 500");
    });
%}

### Get list of return products
GET http://localhost:3000/rma/returns/Products
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get list of return products failure", function() {
        client.assert(response.status === 500, "Expected response status to be 500");
    });
%}

### Get RMA by ID
GET http://localhost:3000/rma/9999
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get RMA by non-existent ID", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}

### Get total price of an RMA
GET http://localhost:3000/rma/9999/total-price
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get total price of non-existent RMA", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}



### Get status of an RMA (*)
GET http://localhost:3000/rma/90/status
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get status of non-existent RMA", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}



### Get customer of an RMA (*)
GET http://localhost:3000/rma/34/customer
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get customer of non-existent RMA", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}


### Get products of an RMA (*)
GET http://localhost:3000/rma/56/products
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get products of non-existent RMA", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}



### Get list of RMA
GET http://localhost:3000/rmas
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get list of RMAs should return 404 on failure", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}




### Get RMAs with date (*)
GET http://localhost:3000/rma/:withDates345
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get RMAs with dates should return 404 on failure", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}



### Get total price of an RMA successfully
GET http://localhost:3000/rma/2/total-price
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get total price of an RMA successfully", function() {
        client.assert(response.status === 200, "Expected response status to be 200");
        client.assert(typeof response.body === 'number', "Expected body to be a number");
    });
%}



### Get RMAs per month - Failure
GET http://localhost:3000/rma/monthly
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get RMAs per month should return 404 on failure", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}



### Get list of return products (*)
GET http://localhost:3000/rma/returns/Products
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get list of return products should return 404 on failure", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}



### Get RMA by ID (*)
GET http://localhost:3000/rma/999
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get RMA by non-existent ID should return 404", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}



### Get RMA by barcode (*)
GET http://localhost:3000/rma/nonexistent-barcode
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get RMA by non-existent barcode should return 404", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}



### Get total price of a non-existent RMA (*)
GET http://localhost:3000/rma/999/total-price
Content-Type: application/json
Accept: application/json

> {%
    client.test("Get total price of a non-existent RMA should return 404", function() {
        client.assert(response.status === 404, "Expected response status to be 404");
    });
%}


